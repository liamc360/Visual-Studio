@model SharedClasses.Person.Employee

@{
    ViewBag.Title = "Edit";

    AjaxOptions options = new AjaxOptions
    {
        OnBegin = "OnBeginMethod",
        OnFailure = "OnFailtureMethod",
        OnSuccess = "OnSuccessMethod",
        OnComplete = "OnCompleteMethod"
    };
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

@using (Ajax.BeginForm(options))
{
    @Html.AntiForgeryToken()

    <div class="modal-body modal-input-style">

        <div class="form">
            <label class="label-white h2">Edit Employee</label>
            @Html.HiddenFor(model => model.EmpNo)
            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label label-white" })
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control datepicker", @id = "editbirth" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label label-white" })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control radius-0", @id = "editfirstname" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label label-white" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control radius-0", @id = "editlastname" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label label-white" })
                @Html.DropDownListFor(model => model.Gender, new SelectList(new string[] { "M", "F" }), new { @class = "form-control radius-0", @id = "editgender" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label label-white" })
                @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control radius-0", @id = "edithiredate" } })
                @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
            </div>
            <div class="space-20"></div>
            <div class="form-group">
                <button type="button" class="btn btn-default radius-0" data-dismiss="modal">
                    Cancel
                </button>
                <button type="submit" id="btnSearchDB" class="btn btn-primary radius-0">
                    Save
                </button>
            </div>
            <div class="form-group">
                <label id="labelAjaxStatus" class="label-white"></label>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    var isError = false;

    function OnBeginMethod() {
        $("#labelAjaxStatus").text("Loading ....");
    }

    function OnFailtureMethod(error) {
        $("#labelAjaxStatus").html(error.responseText);
        isError = true;
    }

    function OnSuccessMethod(data) {
        $("#labelAjaxStatus").text("Edited employee");
        $("#FirstName").val('');
        $("#LastName").val('');
        $("#BirthDate").val('');
        $("#HireDate").val('');
    }

    function OnCompleteMethod(data, status) {
        if (!isError) {
            $("#labelAjaxStatus").text("Edited employee");

            var editRowDetails = {
                "EmpNo": $('#editbirth').val(),
                "BirthDate": $('#editbirth').val(),
                "FirstName": $('#editfirstname').val(),
                "LastName": $('#editlastname').val(),
                "Gender": $('#editgender').val(),
                "HireDate": $('#edithiredate').val(),
            }

            table.editingRow.data(editRowDetails).draw();
            //table.row($(this).parents('tr')).data(Supplierdetails).draw();
            //table.editingRow.data("11","22","33","44","55","66"); 
            //table.editingRow.data();
        }
    }
</script>