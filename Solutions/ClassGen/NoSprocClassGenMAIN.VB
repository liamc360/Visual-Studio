 
 
 
Imports RunshawClasses.UTILS
Imports System.Data.SqlClient
  
Namespace  APP
     
    'Generated by ClassGen project
	'Database: Website
	'Table: Employees
	'Primary Key Found: EmpNo
  
    Public Class Employees

    Sub New()

    End Sub

    Sub Dispose()
        MyBase.Finalize()
    End Sub

    '
    '       basic READ using Primary Key filter
    '
    Public Function Read(ByVal EmpNo As Integer) As Employees()
        '
            ' return array of class as _arr
            '
            Dim sSQL As String
            Dim sWHERE As String = " WHERE "
            '
            sSQL = "SELECT * FROM Website..Employees "
            '
            '
			' change selection criteria dependant on parameters
			'
			If EmpNo <> 0 Then 
				sSQL &= sWHERE & "EmpNo = " & EmpNo
			End If
            '
            Try
                ' get dataset
                Dim dtSource As DataTable = SqlHelper.GetDataSet(sSQL, AppConfig.ConnectString).Tables(0)

                If dtSource.Rows.Count <> 0 Then
                    ReDim Preserve _arr(dtSource.Rows.Count - 1)

                    For i = 0 To dtSource.Rows.Count - 1
                        _arr(i) = Load(dtSource.Rows(i))
                    Next
                End If

            Catch exp As Exception
                _GenericException = exp.ToString.Trim
            End Try

            Return _arr
    End Function
    
    ' single record load for use in READ
    Public Function Load(ByVal dataReader As DataRow) As Employees
        Dim obj As New Employees
            '
            ' return single instance of class
            '
            If Not dataReader Is Nothing Then
                
				'EmpNo int
				If IsDBNull(dataReader("EmpNo")) = False Then
					obj.EmpNo = datareader("EmpNo")
				End If

				'BirthDate date
				If IsDBNull(dataReader("BirthDate")) = False Then
					obj.BirthDate = datareader("BirthDate").ToString
				End If

				'FirstName varchar
				If IsDBNull(dataReader("FirstName")) = False Then
					obj.FirstName = datareader("FirstName").ToString
				End If

				'LastName varchar
				If IsDBNull(dataReader("LastName")) = False Then
					obj.LastName = datareader("LastName").ToString
				End If

				'Gender varchar
				If IsDBNull(dataReader("Gender")) = False Then
					obj.Gender = datareader("Gender").ToString
				End If

				'HireDate date
				If IsDBNull(dataReader("HireDate")) = False Then
					obj.HireDate = datareader("HireDate").ToString
				End If

            End If
            Return obj
    End Function
   
    '
	' INSERT using stored procedure 
	'
	Public Function Add() As Boolean
		'
		Dim iRet As Integer = 0
		Dim iItemNo As Integer = 0
		Using connection As New SqlConnection(AppConfig.ConnectString)
			'
			Dim comTask As SqlCommand = New SqlCommand()
			comTask.Connection = connection
		Dim sCommand as String = String.Empty
		sCommand &= "INSERT INTO Website..Employees ("
			sCommand &= "BirthDate,"
			sCommand &= "FirstName,"
			sCommand &= "LastName,"
			sCommand &= "Gender,"
			sCommand &= "HireDate"
		sCommand &= " )"
		sCommand &= " VALUES ("
			sCommand &= "@BirthDate" & ","
			sCommand &= "@FirstName" & ","
			sCommand &= "@LastName" & ","
			sCommand &= "@Gender" & ","
			sCommand &= "@HireDate" & ""
		sCommand &= " );"
		sCommand &=  "set @EmpNo= scope_identity()"
		comTask.CommandText = sCommand
		comTask.CommandType = CommandType.Text
       		
		
			Dim paramEmpNo As New SqlParameter()
			paramEmpNo.ParameterName = "@EmpNo"
			paramEmpNo.SqlDbType = SqlDbType.int
			paramEmpNo.Direction = ParameterDirection.Output
			comTask.Parameters.Add(paramEmpNo)
		
			Dim paramBirthDate As New SqlParameter()
			paramBirthDate.ParameterName = "@BirthDate"
			paramBirthDate.SqlDbType = SqlDbType.date
			paramBirthDate.Direction = ParameterDirection.Input
			paramBirthDate.Value = _BirthDate
			comTask.Parameters.Add(paramBirthDate)
		
			Dim paramFirstName As New SqlParameter()
			paramFirstName.ParameterName = "@FirstName"
			paramFirstName.SqlDbType = SqlDbType.varchar
			paramFirstName.Direction = ParameterDirection.Input
			paramFirstName.Value = _FirstName
			comTask.Parameters.Add(paramFirstName)
		
			Dim paramLastName As New SqlParameter()
			paramLastName.ParameterName = "@LastName"
			paramLastName.SqlDbType = SqlDbType.varchar
			paramLastName.Direction = ParameterDirection.Input
			paramLastName.Value = _LastName
			comTask.Parameters.Add(paramLastName)
		
			Dim paramGender As New SqlParameter()
			paramGender.ParameterName = "@Gender"
			paramGender.SqlDbType = SqlDbType.varchar
			paramGender.Direction = ParameterDirection.Input
			paramGender.Value = _Gender
			comTask.Parameters.Add(paramGender)
		
			Dim paramHireDate As New SqlParameter()
			paramHireDate.ParameterName = "@HireDate"
			paramHireDate.SqlDbType = SqlDbType.date
			paramHireDate.Direction = ParameterDirection.Input
			paramHireDate.Value = _HireDate
			comTask.Parameters.Add(paramHireDate)
		
			connection.Open()
			Try
				iRet = comTask.ExecuteNonQuery
				_EmpNo = paramEmpNo.Value
			Catch ex As Exception
				_GenericException = ex.ToString.Trim
			End Try
		End Using
		Return True
	End Function
	'
	' UPDATE using stored procedure 
	'
	Public Function Update() As Boolean
		'
		Dim iRet As Integer = 0
		Dim iItemNo As Integer = 0
		Using connection As New SqlConnection(AppConfig.ConnectString)
			'
			Dim comTask As SqlCommand = New SqlCommand()
			comTask.Connection = connection
		Dim sCommand as String = String.Empty
		sCommand &= "UPDATE Website..Employees"
		sCommand &= " SET "
		sCommand &= BirthDate = "@BirthDate" & ","
		sCommand &= FirstName = "@FirstName" & ","
		sCommand &= LastName = "@LastName" & ","
		sCommand &= Gender = "@Gender" & ","
		sCommand &= HireDate = "@HireDate" & ""
		comTask.CommandText = " WHERE EmpNo = " & EmpNo
		comTask.CommandText = sCommand
		comTask.CommandType = CommandType.Text
		
		
			Dim paramEmpNo As New SqlParameter()
			paramEmpNo.ParameterName = "@EmpNo"
			paramEmpNo.SqlDbType = SqlDbType.int
			paramEmpNo.Direction = ParameterDirection.Input
			paramEmpNo.Value = _EmpNo
			comTask.Parameters.Add(paramEmpNo)
		
			Dim paramBirthDate As New SqlParameter()
			paramBirthDate.ParameterName = "@BirthDate"
			paramBirthDate.SqlDbType = SqlDbType.date
			paramBirthDate.Direction = ParameterDirection.Input
			paramBirthDate.Value = _BirthDate
			comTask.Parameters.Add(paramBirthDate)
		
			Dim paramFirstName As New SqlParameter()
			paramFirstName.ParameterName = "@FirstName"
			paramFirstName.SqlDbType = SqlDbType.varchar
			paramFirstName.Direction = ParameterDirection.Input
			paramFirstName.Value = _FirstName
			comTask.Parameters.Add(paramFirstName)
		
			Dim paramLastName As New SqlParameter()
			paramLastName.ParameterName = "@LastName"
			paramLastName.SqlDbType = SqlDbType.varchar
			paramLastName.Direction = ParameterDirection.Input
			paramLastName.Value = _LastName
			comTask.Parameters.Add(paramLastName)
		
			Dim paramGender As New SqlParameter()
			paramGender.ParameterName = "@Gender"
			paramGender.SqlDbType = SqlDbType.varchar
			paramGender.Direction = ParameterDirection.Input
			paramGender.Value = _Gender
			comTask.Parameters.Add(paramGender)
		
			Dim paramHireDate As New SqlParameter()
			paramHireDate.ParameterName = "@HireDate"
			paramHireDate.SqlDbType = SqlDbType.date
			paramHireDate.Direction = ParameterDirection.Input
			paramHireDate.Value = _HireDate
			comTask.Parameters.Add(paramHireDate)
		
			connection.Open()
			Try
				iRet = comTask.ExecuteNonQuery
			Catch ex As Exception
				_GenericException = ex.ToString.Trim
			End Try
		End Using
		Return True


		Return True
	End Function
'
	Public Function Delete()  As Boolean
	'
	Dim iRet As Integer = 0
	Dim iItemNo As Integer = 0


	Using connection As New SqlConnection(AppConfig.ConnectString)
	'
		Dim comTask As SqlCommand = New SqlCommand()
		comTask.Connection = connection
		comTask.CommandText = "DELETE FROM Website..Employees WHERE EmpNo = " & _EmpNo
		comTask.CommandType = CommandType.Text
		connection.Open()
		Try
			iRet = comTask.ExecuteNonQuery
		Catch ex As Exception
			_GenericException = ex.ToString.Trim
			Return False
		End Try
	End Using


	Return True


	End Function
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    '
    '  Properties generated same as column names
    '
    
    
    
    
    Private _arr As Employees()

    Private _GenericException As String
    Public ReadOnly Property GenericException() As String
            Get
                Return _GenericException
            End Get
    End Property
    
    
	'EmpNo int
	Public Property EmpNo As Integer
		Get
			Return _EmpNo
		End Get
		Set(ByVal value As Integer)
			_EmpNo = value
		End Set
	End Property
	Private _EmpNo As Integer

	'BirthDate date
	Public Property BirthDate As String
		Get
			Return _BirthDate
		End Get
		Set(ByVal value As String)
			_BirthDate = value
		End Set
	End Property
	Private _BirthDate As String

	'FirstName varchar
	Public Property FirstName As String
		Get
			Return _FirstName
		End Get
		Set(ByVal value As String)
			_FirstName = value
		End Set
	End Property
	Private _FirstName As String

	'LastName varchar
	Public Property LastName As String
		Get
			Return _LastName
		End Get
		Set(ByVal value As String)
			_LastName = value
		End Set
	End Property
	Private _LastName As String

	'Gender varchar
	Public Property Gender As String
		Get
			Return _Gender
		End Get
		Set(ByVal value As String)
			_Gender = value
		End Set
	End Property
	Private _Gender As String

	'HireDate date
	Public Property HireDate As String
		Get
			Return _HireDate
		End Get
		Set(ByVal value As String)
			_HireDate = value
		End Set
	End Property
	Private _HireDate As String


    End Class
End Namespace